---
- name: Aplicar Controles CIS
  hosts: web
  become: true
  tags:
    - cis
  vars:
      var_system_crypto_policy: "DEFAULT"
      var_accounts_maximum_age_login_defs: '365'
      var_account_disable_post_pw_expiration: '30'
      var_accounts_minimum_age_login_defs: '1'
      var_accounts_password_warn_age_login_defs: '7'
      var_accounts_user_umask: '027'
      var_password_pam_minclass: '4'
      var_password_pam_minlen: '14'
  tasks:
    - block:
        - name: Build and Test AIDE Database - Ensure AIDE Is Installed
          ansible.builtin.package:
            name: aide
            state: present

        - name: Build and Test AIDE Database - Build and Test AIDE Database
          ansible.builtin.command: /usr/sbin/aide --init
          changed_when: true

        - name: Build and Test AIDE Database - Check Whether the Stock AIDE Database Exists
          ansible.builtin.stat:
            path: /var/lib/aide/aide.db.new.gz
          register: aide_database_stat

        - name: Build and Test AIDE Database - Stage AIDE Database
          ansible.builtin.copy:
            src: /var/lib/aide/aide.db.new.gz
            dest: /var/lib/aide/aide.db.gz
            backup: true
            remote_src: true

        - name: Set audit_tools fact
          set_fact:
            audit_tools:
            - /usr/sbin/auditctl
            - /usr/sbin/auditd
            - /usr/sbin/augenrules
            - /usr/sbin/aureport
            - /usr/sbin/ausearch
            - /usr/sbin/autrace
            - /usr/sbin/rsyslogd

        - name: Ensure existing AIDE configuration for audit tools are correct
          ansible.builtin.lineinfile:
            path: /etc/aide.conf
            regexp: ^{{ item }}\s
            line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
          with_items: '{{ audit_tools }}'

        - name: Configure AIDE to properly protect audit tools
          ansible.builtin.lineinfile:
            path: /etc/aide.conf
            line: '{{ item }} p+i+n+u+g+s+b+acl+xattrs+sha512'
          with_items: '{{ audit_tools }}'

        - name: Set cron package name - RedHat
          set_fact:
            cron_pkg_name: cronie
          when: ansible_os_family == "RedHat"

        - name: Set cron package name - Debian
          set_fact:
            cron_pkg_name: cron
          when: ansible_os_family == "Debian"

        - name: Install cron
          ansible.builtin.package:
            name: '{{ cron_pkg_name }}'
            state: present

        - name: Configure Periodic Execution of AIDE
          ansible.builtin.cron:
            name: run AIDE check
            minute: 5
            hour: 4
            weekday: 0
            user: root
            job: /usr/sbin/aide --check
      tags:
        - aide

    - block:
        - name: Configure System Cryptography Policy
          ansible.builtin.lineinfile:
            path: /etc/crypto-policies/config
            regexp: ^(?!#)(\S+)$
            line: '{{ var_system_crypto_policy }}'
            create: true

        - name: Verify that Crypto Policy is Set (runtime)
          ansible.builtin.command:
            cmd: /usr/bin/update-crypto-policies --set {{ var_system_crypto_policy }}
      tags:
        -  cryptography
    - block:
        - name: Configure SSH to use System Crypto Policy
          ansible.builtin.lineinfile:
            dest: /etc/sysconfig/sshd
            state: absent
            regexp: (?i)^\s*CRYPTO_POLICY.*$
      tags:
        - ssh

    - block:
        - name: Set Account Expiration Following Inactivity
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/default/useradd
            regexp: ^INACTIVE
            line: INACTIVE={{ var_account_disable_post_pw_expiration }}

        - name: Set Password Maximum Age
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/login.defs
            regexp: ^#?PASS_MAX_DAYS
            line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}

        - name: Set Password Maximum Age
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/login.defs
            regexp: ^#?PASS_MAX_DAYS
            line: PASS_MAX_DAYS {{ var_accounts_maximum_age_login_defs }}

        - name: Set Password Minimum Age
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/login.defs
            regexp: ^#?PASS_MIN_DAYS
            line: PASS_MIN_DAYS {{ var_accounts_minimum_age_login_defs }}

        - name: Set Existing Passwords Warning Age - Collect Users With Incorrect Number of Days of Warning Before Password Expires
          ansible.builtin.command:
            cmd: awk -F':' '(($6 < {{ var_accounts_password_warn_age_login_defs }} || $6 == "") && $2 ~ /^\$/) {print $1}' /etc/shadow
          register: result_pass_warn_age_user_names
          changed_when: false

        - name: Set Existing Passwords Warning Age - Ensure the Number of Days of Warning Before Password Expires
          ansible.builtin.command:
            cmd: chage --warndays {{ var_accounts_password_warn_age_login_defs }} {{ item }}
          with_items: '{{ result_pass_warn_age_user_names.stdout_lines }}'

        - name: Set Password Warning Age
          lineinfile:
            dest: /etc/login.defs
            regexp: ^PASS_WARN_AGE *[0-9]*
            state: present
            line: PASS_WARN_AGE        {{ var_accounts_password_warn_age_login_defs }}
            create: true

        - name: Replace user umask in /etc/bashrc
          ansible.builtin.replace:
            path: /etc/bashrc
            regexp: ^(\s*)umask(\s+).*
            replace: \g<1>umask\g<2>{{ var_accounts_user_umask }}

        - name: Ensure PAM Enforces Password Requirements - Minimum Different Categories - Ensure PAM variable minclass is set accordingly
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/security/pwquality.conf
            regexp: ^#?\s*minclass
            line: minclass = {{ var_password_pam_minclass }}

        - name: Ensure PAM Enforces Password Requirements - Minimum Length - Ensure PAM variable minlen is set accordingly
          ansible.builtin.lineinfile:
            create: true
            dest: /etc/security/pwquality.conf
            regexp: ^#?\s*minlen
            line: minlen = {{ var_password_pam_minlen }}
